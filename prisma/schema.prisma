// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
   id String @id @default(uuid())
   name String 
   priceIncents Int 
   filePath String 
   imagePath String 
   description String 
   isAvailableForPurchase Boolean @default(true)
   createdAt  DateTime   @default(now())
   updatedAt DateTime  @updatedAt
   orders Order[]
   dowloadVerification DowloadVerification[]
}
model User {
   id String @id @default(uuid())
   email String  @unique
   createdAt  DateTime   @default(now())
   updatedAt DateTime  @updatedAt
   orders Order[]
}

model Order {
   id String @id @default(uuid())
   pricePaidInCent Int  @unique
   createdAt  DateTime   @default(now())
   updatedAt DateTime  @updatedAt
   userId String
   productId String
   user User @relation(fields: [userId],references: [id],onDelete: Cascade)
    product Product @relation(fields: [productId],references: [id],onDelete: Restrict)
}

model DowloadVerification {
   id String @id @default(uuid())
   pricePaidInCent Int  @unique
   createdAt  DateTime   @default(now())
   updatedAt DateTime  @updatedAt
   expiresAt DateTime
   userId String
   productId String
    product Product @relation(fields: [productId],references: [id],onDelete: Restrict)
  
}